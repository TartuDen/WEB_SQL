<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Thread List</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <%- include('parts/header.ejs') %>
  <div class="container my-5">
    <h1 class="mb-4">Threads</h1>
    <%- include('newThreadModal.ejs') %>
    <table class="table table-dark table-striped mt-3">
      <thead>
        <tr>
          <th scope="col" data-column="id" class="sortable">#</th>
          <th scope="col" data-column="title" class="sortable">Title</th>
          <th scope="col" data-column="genre" class="sortable">Genre</th>
          <th scope="col" data-column="author" class="sortable">Author</th>
          <th scope="col" data-column="created" class="sortable">Created</th>
          <th scope="col" data-column="likes" class="sortable">Likes</th>
        </tr>
      </thead>
      <tbody>
        <% if (locals.threads) { %>
          <% threads.forEach(thread => { %>
            <tr>
              <th scope="row"><%= thread.id %></th>
              <td>
                <a href="/thread/<%= thread.id %>"><%= thread.title %></a>
                <% if (user && user.email === thread.author) { %>
                  <form action="/edit_thread/<%= thread.id %>" method="get" style="display: inline;">
                    <button type="submit" style="border: none; background: none; cursor: pointer;">✏️</button>
                  </form>
                  <form action="/delete_thread/<%= thread.id %>" method="post" style="display: inline;">
                    <input type="hidden" name="_method" value="DELETE">
                    <button type="submit" style="border: none; background: none; cursor: pointer;" onclick="return confirm('Are you sure you want to delete this thread?')">🗑️</button>
                  </form>
                <% } %>
              </td>
              <td><%= thread.genres.join(', ') %></td>
              <td><%= thread.author %></td>
              <td><%= new Date(thread.created).toLocaleDateString() %></td>
              <% 
              let likeCount = thread.likes.filter(like => like.type === 'like').length;
              let dislikeCount = thread.likes.filter(like => like.type === 'dislike').length;
            %>
            <td>👍<span class="like-count"><%= likeCount %></span> / 👎🏾<span class="dislike-count"><%= dislikeCount %></span></td>
          </tr>
          <% }) %>
        <% } %>
      </tbody>
    </table>
  </div>
  <%- include('parts/footer.ejs') %>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
      const comparer = (idx, asc) => (a, b) => {
        if (idx === 5) { // if the likes column is being sorted
          const likesA = parseInt(a.children[idx].innerText.split('👍')[1]);
          const likesB = parseInt(b.children[idx].innerText.split('👍')[1]);
          return asc ? likesA - likesB : likesB - likesA;
        } else {
          return ((v1, v2) =>
            v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
          )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
        }
      };

      document.querySelectorAll('th.sortable').forEach(th => th.addEventListener('click', (() => {
        const table = th.closest('table');
        const tbody = table.querySelector('tbody');
        Array.from(tbody.querySelectorAll('tr'))
          .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
          .forEach(tr => tbody.appendChild(tr));

        table.querySelectorAll('th.sortable').forEach(header => {
          header.classList.remove('asc', 'desc');
        });

        th.classList.toggle('asc', this.asc);
        th.classList.toggle('desc', !this.asc);
      })));
    });
  </script>
</body>
</html>
